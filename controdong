
// Bai 1:
#include <iostream>
#include <bits/stdc++.h>

using namespace std;
char * concat( const char * str1, const char* str2)
{
    int len = strlen(str1);
    int len1 = strlen(str2);
    char * result = new char [ len + len1 + 1];
    
    strcat (result , str1);
    strcat ( result, str2);
    return result ;
}

int main()
{ 
    const char* str1 = "hello";
    const char * str2 = "world";
    
    char * result  = concat (str1,str2);
    cout << result ;
   
    return 0;
}
Bài 2:
Khi xóa p2 hoặc p thì địa chỉ sẽ biến mất => lỗi không tồn taij con trỏ

Bai 3 :
char* a = new char[10];
char* c = a + 3;
for (int i = 0; i < 9; i++) a[i] = 'a'; 
a[9] = '\0';
cerr <<"a: " << "-" << a << "-" << endl;
cerr <<"c: " << "-" << c << "-" << endl;
delete c;
cerr << "a after deleting c:" << "-" << a << "-" << endl;
=> Lỗi : delete chỉ dùng cho toán tử new hay được cấp phát động mới đây con trỏ c chỉ dùng địa chỉ của mảng đã được cấp phát động trước đó
Bai 4:
Lỗi invalid pointer : khi đã giải phóng sẽ không còn tồn tại pointer
Phần C:
1, 
#include <bits/stdc++.h>

using namespace std;

void SwapPointers(const char* x, const char* y)
{
   int len = strlen (x);
   int len1 = strlen(y);
   char * new1 = new char [len];
   char * new2 = new char [len1];
   strcpy(new1,x);
   strcpy(new2,y);
   char * temp = new1 ;
   new1 = new2;
   new2 = temp;
   cout << new1 << " " << new2 ;
   
   
}


int main()
{ 
  const char* str1 = "hello";
  const char* str2 = "world";
  SwapPointers(str1,str2);
 

   
    return 0;
}
Bai 2:

